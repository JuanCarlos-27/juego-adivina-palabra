---
import Layout from '../layouts/Layout.astro';
import Placeholder from '../components/Placeholder.astro';
---

<script>
  import confetti from 'canvas-confetti';
  import { WORDS, MOVEMENTS } from '../utils';

  let copyWords = [...WORDS];
  let successes = 0;

  const $ = (selector: string) => document.querySelector(selector);
  const $$ = (selector: string) => document.querySelectorAll(selector);

  const getRandomWord = (wordsArray: string[]) => {
    const randomPosition = Math.floor(Math.random() * wordsArray.length);
    const [word] = wordsArray.splice(randomPosition, 1);
    return word;
  };

  const srambleWord = (word: string[]) => {
    return [...word].sort(() => Math.random() - 0.5).join('');
  };

  const next = (position: number) => {
    ($$('#letters-wrapper input')[position + 1] as HTMLInputElement)?.focus();
  };

  const preview = (position: number) => {
    ($$('#letters-wrapper input')[position - 1] as HTMLInputElement)?.focus();
  };

  const lostPoint = (pressedKey: string) => {
    const lengthOfTries = $$('#retries-points span').length - 1;

    $('#retries-points').removeChild($$('#retries-points span')[lengthOfTries]);
    $('#retries-wrapper h6').textContent = `Tries (${lengthOfTries}/5)`;
    $('#mistakes').textContent += `${pressedKey}, `;

    if (lengthOfTries === 0) {
      $$('#letters-wrapper input').forEach((element) => {
        element.setAttribute('disabled', 'true');
        element.className += 'disabled:bg-gray-500/20';
      });
      return alert('Ha perdido :(');
    }
  };

  const checkWin = () => {
    if (successes === WORDS.length) {
      alert('Felicidades, ha ganado!');
      resetGame();
      return;
    }
  }

  const showRandomWord = () => {
    resetDomElements();
    
    checkWin();

    const RETRIES = 5;
    const randomWord = [...getRandomWord(copyWords)];
    const scrambledWord = srambleWord(randomWord);

    $('#word-screen').textContent = scrambledWord;

    Array(RETRIES).fill(0).forEach(() => {
        const pointCircle = document.createElement('span');
        pointCircle.className = `rounded-full bg-custom-purple-dark w-2 h-2`;
        $('#retries-points').appendChild(pointCircle);
      });

    randomWord.forEach(() => {
      const square = document.createElement('input');
      square.className = `
        rounded-lg px-2 border-custom-gray bg-custom-dark text-center 
        border-2 flex items-center justify-center w-10 h-10
        hover:border-purple-300 uppercase focus:outline-none  focus:border-custom-purple-dark
      `;
      square.setAttribute('maxlength', '1');

      $('#letters-wrapper').appendChild(square);
    });

    let correct: number = 0;
    $$('#letters-wrapper input').forEach((element: HTMLInputElement, index: number) => {
        element.addEventListener('keypress', (e: KeyboardEvent) => {
          const pressedKey = e.key.toUpperCase();
          if (pressedKey === ' ' || pressedKey.length > 1) return;

          element.value = pressedKey;

          if (randomWord[index] === pressedKey.toLowerCase()) {
            next(index);
            correct++;
            element.classList.remove('bg-red-500');
            element.classList.add('bg-green-500');

            if (correct === randomWord.length) {
              confetti();
              successes++;
              showRandomWord();
            }
          } else {
            lostPoint(pressedKey);
            element.classList.remove('bg-green-500');
            element.classList.add('bg-red-500');
          }
        });

        keyboardMovements(element, index);
      }
    );
  };

  const keyboardMovements = (element: HTMLInputElement, index: number) => {
    element.addEventListener('keydown', (e: KeyboardEvent) => {
      if (e.key === MOVEMENTS.RIGHT) {
        next(index);
        return;
      }
      if (e.key === MOVEMENTS.LEFT) {
        preview(index);
        return;
      }
    });
  };

  const resetGame = () => {
    copyWords = [...WORDS];
    successes = 0;
    showRandomWord();
  };

  const resetDomElements = () => {
    $$('#letters-wrapper input').forEach((element: HTMLInputElement) => {
      $('#letters-wrapper').removeChild(element);
    });

    $$('#retries-points span').forEach((element: HTMLInputElement) => {
      $('#retries-points').removeChild(element);
    });

    $('#mistakes').textContent = '';
    $('#retries-wrapper h6').textContent = `Tries (5/5)`;
  };
  const init = () => {
    showRandomWord();
    $('#resetBtn').addEventListener('click', () => resetGame());
    $('#randomBtn').addEventListener('click', () => showRandomWord());
  };

  document.addEventListener('DOMContentLoaded', () => {
    init();
  });
</script>

<Layout title="Guess the word">
  <main>
    <Placeholder />

    <section
      class="bg-custom-dark gap-5 rounded-lg max-w-sm p-8 grid items-center text-custom-white">
      <h3
        class="text-xl text-center font-bold text-transparent bg-clip-text bg-gradient-to-r from-custom-purple-dark from-10% to-custom-pink via-90%">
        Word Scramble
      </h3>

      <article class="py-3 shadow-2xl bg-custom-gray rounded-md shadow-cu">
        <p
          id="word-screen"
          class="text-center text-3xl text-white/40"
          style="letter-spacing: 15px;">
        </p>
      </article>

      <article class="flex gap-x-16 justify-center">
        <div class="flex items-center gap-1" id="retries-wrapper">
          <h6 class="text-xs text-custom-gray/95 font-bold">Tries (5/5)</h6>
          <div class="flex gap-2" id="retries-points"></div>
        </div>
        <div class="flex items-center gap-1 text-xs">
          <h6 class="text-custom-gray/95 font-bold">Mistakes</h6>
          <p id="mistakes"></p>
        </div>
      </article>

      <article
        class="flex flex-wrap gap-2 justify-center items-center"
        id="letters-wrapper">
      </article>

      <footer class="flex justify-center gap-7">
        <button
          type="button"
          id="randomBtn"
          class="bg-custom-pink px-9 py-3 rounded-xl">
          Random
        </button>
        <button
          type="reset"
          id="resetBtn"
          class="bg-custom-pink px-9 py-3 rounded-xl">
          Reset
        </button>
      </footer>
    </section>
  </main>
</Layout>

<style>
  button {
    box-shadow: 0px 4px 0px #672171;
    transition: box-shadow 0.2s;
  }

  button:hover {
    box-shadow: 0px 1px 0px #672171;
  }
</style>
